{"version":3,"sources":["context/Context.js","components/BitcoinPrices.js","components/Counter.js","App.js","reportWebVitals.js","index.js"],"names":["DataContext","createContext","ContextProvider","props","useState","data","setData","fetchData","fetch","then","response","json","catch","error","console","log","useEffect","setInterval","Provider","value","children","BitcoinPrices","useContext","color","setColor","prevData","ref","useRef","current","usePrevious","isMounted","setTimeout","bpi","USD","rate","JSON","stringify","style","transition","className","title","description","code","CaretUpOutlined","CaretDownOutlined","EUR","GBP","time","updated","GenericCounter","type","_date","date","unit","setUnit","setDate","types","hour","Math","floor","minute","second","getTimeDifference","useCallback","Date","parse","newUnit","timers","id","push","map","i","clearInterval","num","icon","PlusOutlined","onClick","newDate","setHours","getHours","newDateMinute","setMinutes","getMinutes","newDateSecond","setSeconds","getSeconds","MinusOutlined","App","Context","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e8d9dd3.chunk.js","sourcesContent":["import { createContext, useEffect, useState } from \"react\";\r\n\r\nexport const DataContext = createContext();\r\n\r\nconst ContextProvider = (props) => {\r\n  const [data, setData] = useState(null);\r\n  const fetchData = () => {\r\n    fetch(\"https://api.coindesk.com/v1/bpi/currentprice.json\")\r\n      .then((response) => response.json())\r\n      .then((data) => setData(data))\r\n      .catch((error) => console.log(error));\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    try {\r\n      setInterval(() => {\r\n        fetchData();\r\n      }, 5000);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }, []);\r\n\r\n  console.log(data);\r\n\r\n  return (\r\n    <DataContext.Provider value={{ data }}>\r\n      {props.children}\r\n    </DataContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ContextProvider;\r\n","import React, { useContext, useEffect, useRef, useState } from \"react\";\r\nimport { Table } from \"antd\";\r\nimport { DataContext } from \"../context/Context\";\r\nimport { CaretUpOutlined } from \"@ant-design/icons\";\r\nimport { CaretDownOutlined } from \"@ant-design/icons\";\r\n\r\nconst dataSource = [\r\n  {\r\n    key: \"1\",\r\n    name: \"Mike\",\r\n    age: 32,\r\n    address: \"10 Downing Street\",\r\n  },\r\n  {\r\n    key: \"2\",\r\n    name: \"John\",\r\n    age: 42,\r\n    address: \"10 Downing Street\",\r\n  },\r\n];\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Name\",\r\n    dataIndex: \"name\",\r\n    key: \"name\",\r\n  },\r\n  {\r\n    title: \"Age\",\r\n    dataIndex: \"age\",\r\n    key: \"age\",\r\n  },\r\n  {\r\n    title: \"Address\",\r\n    dataIndex: \"address\",\r\n    key: \"address\",\r\n  },\r\n];\r\n\r\nconst BitcoinPrices = () => {\r\n  const { data } = useContext(DataContext);\r\n  const [color, setColor] = useState(\"white\");\r\n\r\n  function usePrevious(value) {\r\n    const ref = useRef();\r\n    useEffect(() => {\r\n      ref.current = value;\r\n    });\r\n    return ref.current;\r\n  }\r\n\r\n  const prevData = usePrevious(data);\r\n\r\n  const isMounted = useRef(false);\r\n\r\n  useEffect(() => {\r\n    if (isMounted.current) {\r\n      setColor(\"#dff000\");\r\n      setTimeout(() => {\r\n        if (prevData?.bpi?.USD.rate < data?.bpi?.USD.rate) {\r\n          setColor(\"#72f072\");\r\n        } else {\r\n          setColor(\"red\");\r\n        }\r\n      }, 500);\r\n    }\r\n    isMounted.current = true;\r\n  }, [JSON.stringify(data)]);\r\n\r\n  const style = {\r\n    color,\r\n    transition: `color 300ms ease-in-out`,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"cards\">\r\n        <div\r\n          className=\"header target-highlight\"\r\n          title={data?.bpi?.USD?.description}\r\n        >\r\n          <span className=\"header-left\">\r\n            <span>BTC</span> <strong>{data?.bpi?.USD.code}</strong>\r\n          </span>\r\n          <span style={style} className=\"right\">\r\n            {data?.bpi?.USD.rate}{\" \"}\r\n            <span>\r\n              {color === \"#72f072\" ? (\r\n                <CaretUpOutlined />\r\n              ) : (\r\n                <CaretDownOutlined />\r\n              )}\r\n            </span>\r\n          </span>\r\n        </div>\r\n        <div\r\n          className=\"header target-highlight\"\r\n          title={data?.bpi?.EUR?.description}\r\n        >\r\n          <span className=\"header-left\">\r\n            <span>BTC</span> <strong>{data?.bpi?.EUR.code}</strong>\r\n          </span>\r\n          <span style={style} className=\"right\">\r\n            {data?.bpi?.EUR.rate}{\" \"}\r\n            <span>\r\n              {color === \"#72f072\" ? (\r\n                <CaretUpOutlined />\r\n              ) : (\r\n                <CaretDownOutlined />\r\n              )}\r\n            </span>\r\n          </span>\r\n        </div>\r\n        <div\r\n          className=\"header target-highlight\"\r\n          title={data?.bpi?.GBP?.description}\r\n        >\r\n          <span className=\"header-left\">\r\n            <span>BTC</span> <strong>{data?.bpi?.GBP.code}</strong>\r\n          </span>\r\n          <span style={style} className=\"right\">\r\n            {data?.bpi?.GBP.rate}{\" \"}\r\n            <span>\r\n              {color === \"#72f072\" ? (\r\n                <CaretUpOutlined />\r\n              ) : (\r\n                <CaretDownOutlined />\r\n              )}\r\n            </span>\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <div className=\"bottom-update-time\">{data?.time?.updated}</div>\r\n    </>\r\n  );\r\n};\r\nexport default BitcoinPrices;\r\n","import { Button } from \"antd\";\r\nimport React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { PlusOutlined } from \"@ant-design/icons\";\r\nimport { MinusOutlined } from \"@ant-design/icons\";\r\n\r\nexport const GenericCounter = ({ type, date: _date }) => {\r\n  const [unit, setUnit] = useState(0);\r\n  const [date, setDate] = useState(_date);\r\n\r\n  const types = {\r\n    hour: (time) => Math.floor((time / (1000 * 60 * 60)) % 24),\r\n    minute: (time) => Math.floor((time / 1000 / 60) % 60),\r\n    second: (time) => Math.floor((time / 1000) % 60),\r\n  };\r\n\r\n  const getTimeDifference = useCallback(\r\n    (date) => {\r\n      const time = Date.parse(date) - Date.parse(new Date());\r\n      const newUnit = types[type](time);\r\n      setUnit(newUnit);\r\n    },\r\n    [types, type]\r\n  );\r\n\r\n  const leadingZero = (num) => {\r\n    return num < 10 && num > 0 ? \"0\" + num : num;\r\n  };\r\n\r\n  const timers = useRef([]);\r\n\r\n  useEffect(() => {\r\n    getTimeDifference(date);\r\n    const id = setInterval(() => getTimeDifference(date), 1000);\r\n    timers.current.push(id);\r\n\r\n    return () => timers.current.map((i) => clearInterval(i));\r\n  }, [date, getTimeDifference]);\r\n\r\n  const increaseTime = () => {\r\n    switch (type) {\r\n      case \"hour\":\r\n        const newDate = date.setHours(date.getHours() + 1);\r\n        setDate(new Date(newDate));\r\n        break;\r\n      case \"minute\":\r\n        const newDateMinute = date.setMinutes(date.getMinutes() + 1);\r\n        setDate(new Date(newDateMinute));\r\n        break;\r\n      case \"second\":\r\n        const newDateSecond = date.setSeconds(date.getSeconds() + 1);\r\n        setDate(new Date(newDateSecond));\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const decreaseTime = () => {\r\n    switch (type) {\r\n      case \"hour\":\r\n        const newDate = date.setHours(date.getHours() - 1);\r\n        setDate(new Date(newDate));\r\n        break;\r\n      case \"minute\":\r\n        const newDateMinute = date.setMinutes(date.getMinutes() - 1);\r\n        setDate(new Date(newDateMinute));\r\n        break;\r\n      case \"second\":\r\n        const newDateSecond = date.setSeconds(date.getSeconds() - 1);\r\n        setDate(new Date(newDateSecond));\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"buttons\">\r\n        <Button icon={<PlusOutlined />} onClick={increaseTime} />\r\n        <Button icon={<MinusOutlined />} onClick={decreaseTime} />\r\n      </div>\r\n      <div className=\"indicators\">\r\n        <span className=\"counter-value\">{leadingZero(unit)}</span>{\" \"}\r\n        {unit === 1 ? (\r\n          <span className=\"counter-types\">{type}</span>\r\n        ) : (\r\n          <span className=\"counter-types\">{type}s</span>\r\n        )}\r\n      </div>\r\n      {/* <button onClick={decreaseTime} >-</button>  <button onClick={increaseTime}>+</button> */}\r\n    </div>\r\n  );\r\n};\r\n","import BitcoinPrices from \"./components/BitcoinPrices\";\nimport { GenericCounter } from \"./components/Counter\";\nimport { CounterComp } from \"./components/CounterComp\";\nimport ContextProvider from \"./context/Context\";\n\nfunction App() {\n  var date = new Date();\n  date.setHours(date.getHours() + 10);\n\n  return (\n    <div className=\"App\">\n      <div className=\"header-text\">\n        <h5 className=\"text\">BITCOIN DASHBOARD</h5>\n      </div>\n      <ContextProvider>\n        {/* ilk yaptığımız counter iptal */}\n        <div className=\"container\">\n          <GenericCounter date={date} type=\"hour\" />\n          <GenericCounter date={date} type=\"minute\" />\n          <GenericCounter date={date} type=\"second\" />\n        </div>\n        <BitcoinPrices />\n      </ContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'antd/dist/antd.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}